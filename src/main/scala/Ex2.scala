/**
  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
  even-valued terms.
  */
object Ex2 extends App{

  def getFibosUntil(n: Int, acc: Seq[Long] = Seq(2, 1)): Seq[Long] = acc match {
    case n1 :: n2 :: tail => if (n1 > n) n2 :: tail else getFibosUntil(n, n1 + n2 :: n1 :: n2 :: tail)
    case _ => Seq()
  }

  val fibos: Seq[Long] = getFibosUntil(4000000)
  val result: Long = fibos.filter(_ % 2 == 0).sum

  println(result)
}
